import { fetchQuery } from "@airstack/node";
import { checkIsFollowingFarcasterUser as query } from "../graphql/query/checkIsFollowingFarcasterUser.query";
/**
 * @description Check If a Farcaster user of a given FID is following an array of Farcaster users with certain FIDs.
 * @example
 * const { data, error } = await checkIsFollowingFarcasterUser({
 *  fid: 1,
 *  isFollowing: [2, 3, 4],
 * });
 * @param {Number} input.fid Farcaster user FID
 * @param {Array<Number>} input.isFollowedBy List of FIDs to check if the given user is following these list of Farcaster user with the provided FIDs
 * @returns List of the FID in `isFollowing` followed by true or false on the status of following or not
 */
export async function checkIsFollowingFarcasterUser(input) {
    var _a, _b, _c;
    const { fid, isFollowing } = input !== null && input !== void 0 ? input : {};
    const variable = {
        identity: `fc_fid:${fid}`,
        isFollowing: isFollowing === null || isFollowing === void 0 ? void 0 : isFollowing.map((fid) => `fc_fid:${fid}`),
    };
    const { data, error } = await fetchQuery(query, variable);
    const { Follower } = (_b = (_a = data === null || data === void 0 ? void 0 : data.Wallet) === null || _a === void 0 ? void 0 : _a.socialFollowers) !== null && _b !== void 0 ? _b : {};
    return {
        data: error
            ? null
            : (_c = isFollowing === null || isFollowing === void 0 ? void 0 : isFollowing.map((fid) => {
                var _a;
                return ({
                    fid,
                    isFollowing: (_a = (Follower !== null && Follower !== void 0 ? Follower : [])) === null || _a === void 0 ? void 0 : _a.some((f) => {
                        var _a, _b;
                        return (_b = (_a = f === null || f === void 0 ? void 0 : f.followingAddress) === null || _a === void 0 ? void 0 : _a.farcaster) === null || _b === void 0 ? void 0 : _b.some((fc) => (fc === null || fc === void 0 ? void 0 : fc.fid) === fid.toString());
                    }),
                });
            })) !== null && _c !== void 0 ? _c : [],
        error,
    };
}
//# sourceMappingURL=checkIsFollowingFarcasterUser.js.map