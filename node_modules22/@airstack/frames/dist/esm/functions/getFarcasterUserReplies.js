import { fetchQueryWithPagination } from "@airstack/node";
import { farcasterUserReplies as query } from "../graphql/query/farcasterUserReplies.query";
import { iteratePagination } from "../utils/iteratePagination";
import { formatFarcasterUserReplies } from "../utils/formatFarcasterUserReplies";
/**
 * @description Fetch all the replies casted by a Farcaster user
 * @example
 * const { data, error } = await getFarcasterUserReplies({
 *  fid: 1,
 *  limit: 100,
 * });
 * @param {Number} input.fid Farcaster user FID
 * @param {Number} [input.limit=200] Number of JSON responses returned per API call. Maximum value is 200.
 * @returns An array of Farcaster replies casted by a Farcaster user
 */
export async function getFarcasterUserReplies(input) {
    const { fid, limit } = input !== null && input !== void 0 ? input : {};
    const variable = {
        identity: `fc_fid:${fid}`,
        limit,
    };
    const { data, error, hasPrevPage, hasNextPage, getPrevPage, getNextPage } = await fetchQueryWithPagination(query, variable);
    return {
        data: error ? null : formatFarcasterUserReplies(data),
        error,
        hasPrevPage,
        hasNextPage,
        getPrevPage: async () => await iteratePagination(getPrevPage, formatFarcasterUserReplies),
        getNextPage: async () => await iteratePagination(getNextPage, formatFarcasterUserReplies),
    };
}
//# sourceMappingURL=getFarcasterUserReplies.js.map