export { TokenBlockchain, TrendingTokensCriteria, FarcasterChannelActionType, Audience, TimeFrame, TrendingMintsCriteria as Criteria, FarcasterReactionCriteria, } from "./graphql/types";
export var NFTType;
(function (NFTType) {
    NFTType["ERC721"] = "ERC721";
    NFTType["ERC1155"] = "ERC1155";
})(NFTType || (NFTType = {}));
export var TokenType;
(function (TokenType) {
    TokenType["ERC20"] = "ERC20";
    TokenType["ERC721"] = "ERC721";
    TokenType["ERC1155"] = "ERC1155";
})(TokenType || (TokenType = {}));
export var TransferType;
(function (TransferType) {
    TransferType["All"] = "all";
    TransferType["SelfInitiated"] = "self_initiated";
})(TransferType || (TransferType = {}));
export var FrameRatio;
(function (FrameRatio) {
    FrameRatio["_1__1"] = "1:1";
    FrameRatio["_1_91__1"] = "1.91:1";
})(FrameRatio || (FrameRatio = {}));
export const Button = () => {
    return null;
};
export var Features;
(function (Features) {
    /**
     * Fetches Farcaster user details, e.g. profile name, fid, number of followers/followings, etc.
     */
    Features["USER_DETAILS"] = "user_details";
    /**
     * Fetches Farcaster followings of a Farcaster user.
     */
    Features["FARCASTER_FOLLOWINGS"] = "farcaster_followings";
    /**
     * Fetches Farcaster followers of a Farcaster user.
     */
    Features["FARCASTER_FOLLOWERS"] = "farcaster_followers";
    /**
     * Fetches Farcaster channels of a Farcaster user.
     */
    Features["FARCASTER_CHANNELS"] = "farcaster_channels";
    /**
     * Fetches Farcaster casts of a Farcaster user.
     */
    Features["FARCASTER_CASTS"] = "farcaster_casts";
})(Features || (Features = {}));
export var AllowListCriteriaEnum;
(function (AllowListCriteriaEnum) {
    /**
     * Check if the user has certain number of farcaster followers
     */
    AllowListCriteriaEnum["NUMBER_OF_FARCASTER_FOLLOWERS"] = "number_of_farcaster_followers";
    /**
     * Check if the user is followed by certain users on farcaster
     */
    AllowListCriteriaEnum["FARCASTER_FOLLOWED_BY"] = "farcaster_followed_by";
    /**
     * Check if the user is following certain users on farcaster
     */
    AllowListCriteriaEnum["FARCASTER_FOLLOWING"] = "farcaster_following";
    /**
     * Check if the user is following the caster
     */
    AllowListCriteriaEnum["FARCASTER_FOLLOWING_CASTER"] = "farcaster_following_caster";
})(AllowListCriteriaEnum || (AllowListCriteriaEnum = {}));
export var TrendingSwapsBlockchain;
(function (TrendingSwapsBlockchain) {
    /**
     * Base chain (L2)
     */
    TrendingSwapsBlockchain["Base"] = "base";
    /**
     * Ethereum mainnet
     */
    TrendingSwapsBlockchain["Ethereum"] = "ethereum";
})(TrendingSwapsBlockchain || (TrendingSwapsBlockchain = {}));
export var TrendingSwapsCriteria;
(function (TrendingSwapsCriteria) {
    /**
     * Sort the trending swaps by the number of buy transactions.
     */
    TrendingSwapsCriteria["BuyTransactionCount"] = "buy_transaction_count";
    /**
     * Sort the trending swaps by the number of buying volume.
     */
    TrendingSwapsCriteria["BuyVolume"] = "buy_volume";
    /**
     * Sort the trending swaps by the number of sell transactions.
     */
    TrendingSwapsCriteria["SellTransactionCount"] = "sell_transaction_count";
    /**
     * Sort the trending swaps by the number of selling volume.
     */
    TrendingSwapsCriteria["SellVolume"] = "sell_volume";
    /**
     * Sort the trending swaps by the number of total buy & sell transactions.
     */
    TrendingSwapsCriteria["TotalTransactionCount"] = "total_transaction_count";
    /**
     * Sort the trending swaps by the number of total unique buyer & seller wallets swapping.
     */
    TrendingSwapsCriteria["TotalUniqueWallets"] = "total_unique_wallets";
    /**
     * Sort the trending swaps by the number of total buying & selling volume.
     */
    TrendingSwapsCriteria["TotalVolume"] = "total_volume";
    /**
     * Sort the trending swaps by the number of unique buyer wallets swapping.
     */
    TrendingSwapsCriteria["UniqueBuyWallets"] = "unique_buy_wallets";
    /**
     * Sort the trending swaps by the number of unique seller wallets swapping.
     */
    TrendingSwapsCriteria["UniqueSellWallets"] = "unique_sell_wallets";
})(TrendingSwapsCriteria || (TrendingSwapsCriteria = {}));
//# sourceMappingURL=types.js.map