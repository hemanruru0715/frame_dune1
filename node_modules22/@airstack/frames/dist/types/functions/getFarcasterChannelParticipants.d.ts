import { FarcasterChannelParticipantsInput, FarcasterChannelParticipantsOutput } from "../types";
/**
 * @description Fetch Farcaster channels participants
 * @example
 * const { data, error } = await getFarcasterChannelParticipants({
 *  channel: "airstack",
 *  actionType: [FarcasterChannelActionType.Cast],
 *  lastActionTimestamp: {
 *    after: "2024-02-01T00:00:00Z",
 *    before: "2024-02-28T00:00:00Z",
 *  },
 *  limit: 100,
 * });
 * @param {Number} input.channel Farcaster channel ID, e.g. /airstack channel ID is "airstack"
 * @param {FarcasterChannelActionType[]} [input.actionType] Farcaster channel action type, either cast or reply
 * @param {Time} [input.lastActionTimestamp.before] get participants that participate before the specified input. ISO 8601 date string, e.g. "2024-02-28T00:00:00Z"
 * @param {Time} [input.lastActionTimestamp.after] get participants that participate after the specified input. ISO 8601 date string, e.g. "2024-02-28T00:00:00Z"
 * @param {Number} [input.limit=200] Number of JSON responses returned per API call. Maximum value is 200.
 * @returns Farcaster channels that the Farcaster user have participated in, either casted or replied to a cast.
 */
export declare function getFarcasterChannelParticipants(input: FarcasterChannelParticipantsInput): Promise<FarcasterChannelParticipantsOutput>;
