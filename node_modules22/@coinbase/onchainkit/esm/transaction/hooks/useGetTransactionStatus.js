import { useMemo } from 'react';
import { useChainId } from 'wagmi';
import { getChainExplorer } from '../../network/getChainExplorer.js';
import { color, cn, text } from '../../styles/theme.js';
import { useTransactionContext } from '../components/TransactionProvider.js';
import { jsx } from 'react/jsx-runtime';
function useGetTransactionStatus() {
  const _useTransactionContex = useTransactionContext(),
    chainId = _useTransactionContex.chainId,
    errorMessage = _useTransactionContex.errorMessage,
    isLoading = _useTransactionContex.isLoading,
    receipt = _useTransactionContex.receipt,
    statusWriteContract = _useTransactionContex.statusWriteContract,
    statusWriteContracts = _useTransactionContex.statusWriteContracts,
    transactionHash = _useTransactionContex.transactionHash,
    transactionId = _useTransactionContex.transactionId;
  const accountChainId = chainId ?? useChainId();
  const isPending = statusWriteContract === 'pending' || statusWriteContracts === 'pending';
  const isInProgress = isLoading || !!transactionId || !!transactionHash;
  return useMemo(() => {
    const chainExplorer = getChainExplorer(accountChainId);
    let actionElement = null;
    let label = '';
    let labelClassName = color.foregroundMuted;
    if (isPending) {
      label = 'Confirm in wallet.';
    }
    if (isInProgress) {
      label = 'Transaction in progress...';
    }
    if (transactionHash) {
      actionElement = /*#__PURE__*/jsx("a", {
        href: `${chainExplorer}/tx/${transactionHash}`,
        target: "_blank",
        rel: "noreferrer",
        children: /*#__PURE__*/jsx("span", {
          className: cn(text.label1, color.primary),
          children: "View transaction"
        })
      });
    }
    if (receipt) {
      label = 'Successful!';
    }
    if (errorMessage) {
      label = errorMessage;
      labelClassName = color.error;
    }
    return {
      actionElement,
      label,
      labelClassName
    };
  }, [accountChainId, errorMessage, isInProgress, isPending, receipt, transactionHash]);
}
export { useGetTransactionStatus };
//# sourceMappingURL=useGetTransactionStatus.js.map
