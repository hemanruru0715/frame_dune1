import { useMemo } from 'react';
import { useChainId } from 'wagmi';
import { Spinner } from '../../internal/components/Spinner.js';
import { errorSvg } from '../../internal/svg/errorSvg.js';
import { successSvg } from '../../internal/svg/successSvg.js';
import { getChainExplorer } from '../../network/getChainExplorer.js';
import { cn, text, color } from '../../styles/theme.js';
import { useTransactionContext } from '../components/TransactionProvider.js';
import { jsx } from 'react/jsx-runtime';
function useGetTransactionToast() {
  const _useTransactionContex = useTransactionContext(),
    chainId = _useTransactionContex.chainId,
    errorMessage = _useTransactionContex.errorMessage,
    isLoading = _useTransactionContex.isLoading,
    onSubmit = _useTransactionContex.onSubmit,
    receipt = _useTransactionContex.receipt,
    transactionHash = _useTransactionContex.transactionHash,
    transactionId = _useTransactionContex.transactionId;
  const accountChainId = chainId ?? useChainId();
  const isInProgress = isLoading || !!transactionId || !!transactionHash;
  return useMemo(() => {
    const chainExplorer = getChainExplorer(accountChainId);
    let actionElement = null;
    let label = '';
    let icon = null;
    if (isInProgress) {
      icon = /*#__PURE__*/jsx(Spinner, {
        className: "px-1.5 py-1.5"
      });
      label = 'Transaction in progress';
    }
    if (transactionHash) {
      actionElement = /*#__PURE__*/jsx("a", {
        href: `${chainExplorer}/tx/${transactionHash}`,
        target: "_blank",
        rel: "noreferrer",
        children: /*#__PURE__*/jsx("span", {
          className: cn(text.label1, color.primary),
          children: "View transaction"
        })
      });
    }
    if (receipt) {
      icon = successSvg;
      label = 'Successful';
    }
    if (errorMessage) {
      actionElement = /*#__PURE__*/jsx("button", {
        type: "button",
        onClick: onSubmit,
        children: /*#__PURE__*/jsx("span", {
          className: cn(text.label1, color.primary),
          children: "Try again"
        })
      });
      icon = errorSvg;
      label = 'Something went wrong';
    }
    return {
      actionElement,
      icon,
      label
    };
  }, [accountChainId, errorMessage, isInProgress, onSubmit, receipt, transactionHash]);
}
export { useGetTransactionToast };
//# sourceMappingURL=useGetTransactionToast.js.map
