import { ConnectButton } from '@rainbow-me/rainbowkit';
import { useCallback } from 'react';
import { useAccount, useConnect } from 'wagmi';
import { IdentityProvider } from '../../identity/components/IdentityProvider.js';
import { Spinner } from '../../internal/components/Spinner.js';
import { cn, pressable, text, color } from '../../styles/theme.js';
import { ConnectButton as ConnectButton$1 } from './ConnectButton.js';
import { useWalletContext } from './WalletProvider.js';
import { jsx } from 'react/jsx-runtime';
function ConnectWallet({
  children,
  className,
  text: text$1 = 'Connect Wallet',
  withWalletAggregator = false
}) {
  const _useWalletContext = useWalletContext(),
    isOpen = _useWalletContext.isOpen,
    setIsOpen = _useWalletContext.setIsOpen;
  const _useAccount = useAccount(),
    address = _useAccount.address,
    status = _useAccount.status;
  const _useConnect = useConnect(),
    connectors = _useConnect.connectors,
    connect = _useConnect.connect,
    connectStatus = _useConnect.status;
  const handleToggle = useCallback(() => {
    setIsOpen(!isOpen);
  }, [isOpen, setIsOpen]);
  const connector = connectors[0];
  const isLoading = connectStatus === 'pending' || status === 'connecting';
  if (status === 'disconnected') {
    if (withWalletAggregator) {
      return /*#__PURE__*/jsx(ConnectButton.Custom, {
        children: ({
          openConnectModal
        }) => /*#__PURE__*/jsx("div", {
          className: "flex",
          "data-testid": "ockConnectWallet_Container",
          children: /*#__PURE__*/jsx(ConnectButton$1, {
            className: className,
            connectButtonOnClick: () => openConnectModal(),
            text: text$1
          })
        })
      });
    }
    return /*#__PURE__*/jsx("div", {
      className: "flex",
      "data-testid": "ockConnectWallet_Container",
      children: /*#__PURE__*/jsx(ConnectButton$1, {
        className: className,
        connectButtonOnClick: () => connect({
          connector
        }),
        text: text$1
      })
    });
  }
  if (isLoading) {
    return /*#__PURE__*/jsx("div", {
      className: "flex",
      "data-testid": "ockConnectWallet_Container",
      children: /*#__PURE__*/jsx("button", {
        type: "button",
        "data-testid": "ockConnectAccountButtonInner",
        className: cn(pressable.primary, text.headline, color.inverse, 'inline-flex min-w-[153px] items-center justify-center rounded-xl px-4 py-3', pressable.disabled, className),
        disabled: true,
        children: /*#__PURE__*/jsx(Spinner, {})
      })
    });
  }
  return /*#__PURE__*/jsx(IdentityProvider, {
    address: address,
    children: /*#__PURE__*/jsx("div", {
      className: "flex gap-4",
      "data-testid": "ockConnectWallet_Container",
      children: /*#__PURE__*/jsx("button", {
        type: "button",
        "data-testid": "ockConnectWallet_Connected",
        className: cn(pressable.secondary, 'rounded-xl px-4 py-3', isOpen && 'bg-secondary-active hover:bg-secondary-active', className),
        onClick: handleToggle,
        children: /*#__PURE__*/jsx("div", {
          className: "flex gap-2",
          children: children
        })
      })
    })
  });
}
export { ConnectWallet };
//# sourceMappingURL=ConnectWallet.js.map
