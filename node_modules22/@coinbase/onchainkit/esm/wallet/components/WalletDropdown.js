import { useMemo, Children, isValidElement, cloneElement } from 'react';
import { useAccount } from 'wagmi';
import { Identity } from '../../identity/components/Identity.js';
import { cn, background } from '../../styles/theme.js';
import { jsx } from 'react/jsx-runtime';
function WalletDropdown({
  children,
  className
}) {
  const _useAccount = useAccount(),
    address = _useAccount.address;
  const childrenArray = useMemo(() => {
    return Children.toArray(children).map(child => {
      if ( /*#__PURE__*/isValidElement(child) && child.type === Identity) {
        // @ts-ignore
        return /*#__PURE__*/cloneElement(child, {
          address
        });
      }
      return child;
    });
  }, [children, address]);
  if (!address) {
    return null;
  }
  return /*#__PURE__*/jsx("div", {
    className: cn(background.default, 'absolute right-0 z-10 mt-1 flex w-max min-w-[250px] flex-col overflow-hidden rounded-xl pb-2', className),
    children: childrenArray
  });
}
export { WalletDropdown };
//# sourceMappingURL=WalletDropdown.js.map
