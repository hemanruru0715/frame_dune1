import type { ClassValue } from 'clsx';
export declare function cn(...inputs: ClassValue[]): string;
export declare const text: {
    readonly body: "font-sans text-ock-foreground text-base leading-normal";
    readonly caption: "font-sans text-ock-foreground text-bold text-xs leading-4";
    readonly headline: "font-bold text-ock-foreground font-sans text-base leading-normal";
    readonly label1: "font-bold text-ock-foreground font-sans text-sm leading-5";
    readonly label2: "font-sans text-ock-foreground text-sm leading-5";
    readonly legal: "font-sans text-ock-foreground text-xs leading-4";
    readonly title3: "font-bold text-ock-foreground font-display text-xl leading-7";
};
export declare const pressable: {
    readonly default: "cursor-pointer bg-ock-default active:bg-ock-default-active hover:bg-ock-default-hover";
    readonly alternate: "cursor-pointer bg-ock-alternate active:bg-ock-alternate-active hover:bg-ock-alternate-hover";
    readonly inverse: "cursor-pointer bg-ock-inverse active:bg-ock-inverse-active hover:bg-ock-inverse-hover";
    readonly primary: "cursor-pointer bg-ock-primary active:bg-ock-primary-active hover:bg-ock-primary-hover";
    readonly secondary: "cursor-pointer bg-ock-secondary active:bg-ock-secondary-active hover:bg-ock-secondary-hover";
    readonly shadow: "shadow-[0px_8px_12px_0px_#5B616E1F]";
    readonly disabled: "opacity-[0.38]";
};
export declare const background: {
    readonly default: "bg-ock-default";
    readonly alternate: "bg-ock-alternate";
    readonly inverse: "bg-ock-inverse";
    readonly primary: "bg-ock-primary";
    readonly secondary: "bg-ock-secondary";
    readonly error: "bg-ock-error";
    readonly warning: "bg-ock-warning";
    readonly success: "bg-ock-success";
};
export declare const color: {
    readonly inverse: "text-ock-inverse";
    readonly foreground: "text-ock-foreground";
    readonly foregroundMuted: "text-ock-foreground-muted";
    readonly error: "text-ock-error";
    readonly primary: "text-ock-primary";
    readonly success: "text-ock-success";
    readonly warning: "text-ock-warning";
    readonly disabled: "text-ock-disabled";
};
export declare const fill: {
    readonly inverse: "fill-inverse";
    readonly foreground: "fill-foreground";
    readonly foregroundMuted: "fill-foreground-muted";
    readonly error: "fill-error";
    readonly primary: "fill-primary";
    readonly success: "fill-success";
    readonly warning: "fill-warning";
    readonly disabled: "fill-disabled";
};
//# sourceMappingURL=theme.d.ts.map