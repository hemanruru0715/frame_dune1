import { Spinner } from '../../internal/components/Spinner.js';
import { cn, background, pressable, text, color } from '../../styles/theme.js';
import { useSwapContext } from './SwapProvider.js';
import { jsx } from 'react/jsx-runtime';
function SwapButton({
  className,
  disabled = false,
  onError,
  onStart,
  onSuccess
}) {
  const _useSwapContext = useSwapContext(),
    to = _useSwapContext.to,
    from = _useSwapContext.from,
    loading = _useSwapContext.loading,
    isTransactionPending = _useSwapContext.isTransactionPending,
    handleSubmit = _useSwapContext.handleSubmit;
  const isLoading = to.loading || from.loading || loading || isTransactionPending;
  const isDisabled = !from.amount || !from.token || !to.amount || !to.token || disabled || isLoading;
  return /*#__PURE__*/jsx("button", {
    type: "button",
    className: cn(background.primary, 'w-full rounded-xl', 'mt-4 px-4 py-3 font-medium text-base text-white leading-6', isDisabled && pressable.disabled, text.headline, className),
    onClick: () => handleSubmit(onError, onStart, onSuccess),
    disabled: isDisabled,
    "data-testid": "ockSwapButton_Button",
    children: isLoading ? /*#__PURE__*/jsx(Spinner, {}) : /*#__PURE__*/jsx("span", {
      className: cn(text.headline, color.inverse),
      children: "Swap"
    })
  });
}
export { SwapButton };
//# sourceMappingURL=SwapButton.js.map
