/// <reference types="react" />
import type { TransactionReceipt } from 'viem';
import type { Config } from 'wagmi';
import type { SendTransactionMutateAsync } from 'wagmi/query';
import type { BuildSwapTransaction } from '../types';
export declare function processSwapTransaction({ swapTransaction, config, setPendingTransaction, setLoading, sendTransactionAsync, onStart, onSuccess, }: {
    swapTransaction: BuildSwapTransaction;
    config: Config;
    setPendingTransaction: (value: React.SetStateAction<boolean>) => void;
    setLoading: (value: React.SetStateAction<boolean>) => void;
    sendTransactionAsync: SendTransactionMutateAsync<Config, unknown>;
    onStart: ((txHash: string) => void | Promise<void>) | undefined;
    onSuccess: ((txReceipt: TransactionReceipt) => void | Promise<void>) | undefined;
}): Promise<void>;
//# sourceMappingURL=processSwapTransaction.d.ts.map